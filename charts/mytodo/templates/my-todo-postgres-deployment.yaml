#apiVersion: extensions/v1beta1
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ template "mytodo.fullname" . }}-mytodo
  name: my-todo-postgres
  labels:
    my-todo-app-deployment: my-todo-postgres
spec:
  replicas: {{ .Values.replicas.mytodoPostgres }}
  selector:
      matchLabels:
        my-todo-app-pod: my-todo-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        my-todo-app-pod: my-todo-postgres
    spec:
      restartPolicy: Always
      containers:
      - name: my-todo-postgres
        image: {{ .Values.todoImageUser }}/my-todo-postgres:{{ .Values.todoVersion }}
        envFrom:
        - configMapRef:
            name: my-todo-config
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: my-todo-secret
              key: POSTGRES_PASSWORD
        ports:
        - containerPort: 5432
        resources:
          limits:
            memory: "1Gi"
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: my-todo-postgres-data
          subPath: todo
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
            - -U
            - todo
          initialDelaySeconds: 5
          timeoutSeconds: 1
          successThreshold: 3
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
            - -U
            - todo
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
      volumes:
      - name: my-todo-postgres-data
        persistentVolumeClaim:
          claimName: my-todo-postgres-data-pvc